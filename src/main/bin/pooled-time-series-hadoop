#!/bin/bash
# 
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

MAIN_PTS_DIR=$POOLED_TIME_SERIES_HOME/../..
HDFS_PTS_DIR=/user/pts/output

TIME_SERIES_INPUT=$HDFS_PTS_DIR/OpticalAndGradientTimeSeriesInput
SIMILARITY_INPUT=$HDFS_PTS_DIR/MeanChiSquareAndSimilarityInput

PTS_TIME_SERIES_INPUT=$POOLED_TIME_SERIES_HOME/OpticalAndGradientTimeSeriesInput
PTS_SIMILARITY_INPUT=$POOLED_TIME_SERIES_HOME/MeanChiSquareAndSimilarityInput
PTS_MEAN_CHI_OUTPUT=$POOLED_TIME_SERIES_HOME/MeanChiSquareOutput
echo "initialized"

hadoop fs -mkdir $HDFS_PTS_DIR
hadoop fs -mkdir $TIME_SERIES_INPUT
hadoop fs -mkdir $SIMILARITY_INPUT
mkdir $PTS_TIME_SERIES_INPUT
mkdir $PTS_SIMILARITY_INPUT
mkdir $PTS_MEAN_CHI_OUTPUT

echo "*****************"
echo "directory created"
echo "*****************"

# list full file names omitting information like
hadoop fs -ls $2 | sed '1d;s/  */ /g' | cut -d\  -f8 | grep '\.mp4$' > $PTS_TIME_SERIES_INPUT/original_videos.txt
echo "*****************"
echo "Checking- " $PTS_TIME_SERIES_INPUT/original_videos.txt
ls -lrt $PTS_TIME_SERIES_INPUT/original_videos.txt
echo "*****************"

python $MAIN_PTS_DIR/src/main/bin/generate_video_pairs.py $PTS_TIME_SERIES_INPUT $PTS_SIMILARITY_INPUT

echo "*****************"
echo "Finished executing generate_video_pairs.py Checking- " $PTS_SIMILARITY_INPUT/videos.txt
ls -lrt $PTS_SIMILARITY_INPUT/videos.txt
echo "*****************"

mkdir $PTS_TIME_SERIES_INPUT/split
split -l 1000 $PTS_TIME_SERIES_INPUT/original_videos.txt $PTS_TIME_SERIES_INPUT/split/original_videos.txt_

# Create temp space for storing batch results of OTS and GTS 
hadoop fs -mkdir $HDFS_PTS_DIR/OTSOutput_batch
hadoop fs -mkdir $HDFS_PTS_DIR/GTSOutput_batch
 
#Loop over all the files in $PTS_TIME_SERIES_INPUT/split/
# process 1000 videos at one time
FILES=$PTS_TIME_SERIES_INPUT/split/*
for f in $FILES
do
	# Remove old original_videos.txt
	hadoop fs -rm $TIME_SERIES_INPUT/original_videos.txt
	# copy new batch if video input to hdfs
	ls $f
	hadoop fs -put $f $TIME_SERIES_INPUT/original_videos.txt
	# checking copied input
	hadoop fs -ls $TIME_SERIES_INPUT
	hadoop fs -cat $TIME_SERIES_INPUT/original_videos.txt | wc -l
	hadoop fs -cat $TIME_SERIES_INPUT/original_videos.txt | head

	# Optical and Gradient Time Series Calcs
	hadoop jar target/pooled-time-series-1.0-SNAPSHOT-jar-with-dependencies.jar gov.nasa.jpl.memex.pooledtimeseries.OpticalTimeSeries $TIME_SERIES_INPUT $HDFS_PTS_DIR/OTSOutput
	
	echo "*****************"
	echo "Completed OpticalTimeSeries. Output in - " $HDFS_PTS_DIR/OTSOutput
	hadoop fs -ls  $HDFS_PTS_DIR/OTSOutput
	echo "*****************"
	hadoop jar target/pooled-time-series-1.0-SNAPSHOT-jar-with-dependencies.jar gov.nasa.jpl.memex.pooledtimeseries.GradientTimeSeries $TIME_SERIES_INPUT $HDFS_PTS_DIR/GTSOutput

	echo "*****************"
	echo "Completed GradientTimeSeries. Output in - " $HDFS_PTS_DIR/GTSOutput
	hadoop fs -ls $HDFS_PTS_DIR/GTSOutput
	echo "*****************"
	
	hadoop fs -cp $HDFS_PTS_DIR/OTSOutput/*.of.txt $HDFS_PTS_DIR/OTSOutput_batch
	hadoop fs -cp $HDFS_PTS_DIR/GTSOutput/*.hog.txt $HDFS_PTS_DIR/GTSOutput_batch
	
	hadoop fs -rm -r $HDFS_PTS_DIR/OTSOutput
	hadoop fs -rm -r $HDFS_PTS_DIR/GTSOutput
	
done

hadoop fs -rm $2/*.of.txt 
hadoop fs -rm $2/*.hog.txt

hadoop fs -cp $HDFS_PTS_DIR/OTSOutput_batch/*.of.txt $2
hadoop fs -cp $HDFS_PTS_DIR/GTSOutput_batch/*.hog.txt $2

echo "*****************"
echo "Copied OTSOutput, GTSOutput to : " $2
hadoop fs -ls $2 | head
echo "*****************"

hadoop fs -rm -r $HDFS_PTS_DIR/OTSOutput_batch
hadoop fs -rm -r $HDFS_PTS_DIR/GTSOutput_batch

echo "*****************"
echo "Removed batch outputs after copying to : " $2
echo "*****************"


hadoop fs -put $PTS_SIMILARITY_INPUT/videos.txt $SIMILARITY_INPUT
echo "*****************"
echo "video pairs coiped to hdfs"
hadoop fs -ls $SIMILARITY_INPUT
echo "*****************"


# MeanChiSquareDistance Vector Calc
hadoop jar target/pooled-time-series-1.0-SNAPSHOT-jar-with-dependencies.jar gov.nasa.jpl.memex.pooledtimeseries.MeanChiSquareDistanceCalculation $SIMILARITY_INPUT $HDFS_PTS_DIR/MeanChiSquaredCalcOutput
hadoop fs -getmerge $HDFS_PTS_DIR/MeanChiSquaredCalcOutput $PTS_MEAN_CHI_OUTPUT/mean_dists.txt
hadoop fs -put $PTS_MEAN_CHI_OUTPUT/mean_dists.txt $HDFS_PTS_DIR/

echo "*****************"
echo "Expecting output in " $HDFS_PTS_DIR/MeanChiSquaredCalcOutput
hadoop fs -ls $HDFS_PTS_DIR/MeanChiSquaredCalcOutput
echo "Copied merged MeanChiSquaredCalcOutput output to " $PTS_MEAN_CHI_OUTPUT/mean_dists.txt
ls -lrt $PTS_MEAN_CHI_OUTPUT/mean_dists.txt
echo "Copied merged to hdfs " $HDFS_PTS_DIR/
hadoop fs -ls $HDFS_PTS_DIR/mean_dists.txt
echo "*****************"

# Similarity Calc
hadoop fs -rm -r $HDFS_PTS_DIR/SimilarityCalc
hadoop jar target/pooled-time-series-1.0-SNAPSHOT-jar-with-dependencies.jar gov.nasa.jpl.memex.pooledtimeseries.SimilarityCalculation $SIMILARITY_INPUT $HDFS_PTS_DIR/SimilarityCalc/ $HDFS_PTS_DIR/mean_dists.txt
hadoop fs -getmerge $HDFS_PTS_DIR/SimilarityCalc $PTS_SIMILARITY_INPUT/similarity_calc.txt

echo "Output in - " $PTS_SIMILARITY_INPUT/similarity_calc.txt

hadoop fs -rm -r $TIME_SERIES_INPUT
hadoop fs -rm -r $SIMILARITY_INPUT
